# -----------------------------------------------------------------------------
# Start Profiling
# -----------------------------------------------------------------------------
# zmodload zsh/zprof  # Load zprof to analyze performance
ZSH_DISABLE_COMPFIX="true"

# -----------------------------------------------------------------------------
# Cursor Shape for iTerm2
# -----------------------------------------------------------------------------
ZVM_CURSOR_STYLE_ENABLED=false

# -----------------------------------------------------------------------------
# Path to Oh-My-Zsh Installation and Plugin Defer Loading
# -----------------------------------------------------------------------------
export ZSH="$HOME/.oh-my-zsh"

# Lazy-load Oh-My-Zsh
# https://github.com/romkatv/zsh-defer
source ~/zsh-defer/zsh-defer.plugin.zsh
zsh-defer source $ZSH/oh-my-zsh.sh

# -----------------------------------------------------------------------------
# Source env
# -----------------------------------------------------------------------------
source $HOME/.profile
source $HOME/.shell_env

# -----------------------------------------------------------------------------
# Optimize Completion Initialization (compinit)
# -----------------------------------------------------------------------------
autoload -Uz compinit
if [[ -f ~/.zcompdump.zwc ]]; then
  zcompile ~/.zcompdump  # Precompile zcompdump for faster startup
fi
compinit -C -d ~/.zcompdump  # Use cached completions, skip security checks

# -----------------------------------------------------------------------------
# Plugins
# -----------------------------------------------------------------------------
# Defer loading heavy plugins
plugins=(
  git
  fzf
)

# -----------------------------------------------------------------------------
# Fix for zsh-autosuggestions Keybinding
# -----------------------------------------------------------------------------

zsh-defer source $HOME/.fzf.zsh
zsh-defer source $ZSH/custom/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh
zsh-defer source $ZSH/custom/plugins/fzf-tab/fzf-tab.zsh
zsh-defer source $ZSH/plugins/z/z.plugin.zsh

# -----------------------------------------------------------------------------
# Disable Auto-Update for Oh-My-Zsh
# -----------------------------------------------------------------------------
DISABLE_AUTO_UPDATE="true"

# -----------------------------------------------------------------------------
# Minimal Prompt for Faster Rendering
# -----------------------------------------------------------------------------
#
# Function to get the current branch and dirty state
PROMPT='%{$fg[green]%}%~ %{$fg[blue]%}$(git_branch_and_status)%{$reset_color%} '

ZSH_THEME_GIT_PROMPT_PREFIX="("
ZSH_THEME_GIT_PROMPT_SUFFIX=")"
ZSH_THEME_GIT_PROMPT_DIRTY=" +"
ZSH_THEME_GIT_PROMPT_CLEAN=""

ZSH_AUTOSUGGEST_CLEAR_WIDGETS+=(buffer-empty bracketed-paste accept-line push-line-or-edit)
ZSH_AUTOSUGGEST_STRATEGY=(history completion)
ZSH_AUTOSUGGEST_USE_ASYNC=true
ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=#666666"

# -----------------------------------------------------------------------------
# Shell Options
# -----------------------------------------------------------------------------

# Todo remove
setopt hist_ignore_all_dups
setopt share_history
setopt autocd
setopt prompt_subst

# -----------------------------------------------------------------------------
# Keybindings
# -----------------------------------------------------------------------------
bindkey -v  # Use Vim keybindings
bindkey '^P' up-history
bindkey '^N' down-history
bindkey '^?' backward-delete-char
bindkey '^h' backward-delete-char
bindkey '^w' backward-kill-word
bindkey '^r' history-incremental-search-backward
bindkey '^v' fzf-file-widget
bindkey "^f" fzf-cd-widget


# -----------------------------------------------------------------------------
# Setup Node Version Management (fnm) - Lazy Loaded
# -----------------------------------------------------------------------------
eval "$(fnm env --use-on-cd)"

# -----------------------------------------------------------------------------
# Load pyenv - Lazy Loaded
# -----------------------------------------------------------------------------
if command -v pyenv 1>/dev/null; then
  export PYENV_ROOT="$HOME/.pyenv"
  path+=("$PYENV_ROOT/bin")
  load_pyenv() { eval "$(pyenv init --path)"; }
  add-zsh-hook precmd load_pyenv
fi

# -----------------------------------------------------------------------------
# SDKMAN for Java Management
# -----------------------------------------------------------------------------
export SDKMAN_DIR="$HOME/.sdkman"
[[ -s "$SDKMAN_DIR/bin/sdkman-init.sh" ]] && source "$SDKMAN_DIR/bin/sdkman-init.sh"

# -----------------------------------------------------------------------------
# Bun (JavaScript Runtime) Setup
# -----------------------------------------------------------------------------
export BUN_INSTALL="$HOME/.bun"
export PATH="$BUN_INSTALL/bin:$PATH"

# -----------------------------------------------------------------------------
# Google Cloud SDK
# -----------------------------------------------------------------------------
if [ -f '/Users/jon.walstedt/bin/google-cloud-sdk/path.zsh.inc' ]; then
  . '/Users/jon.walstedt/bin/google-cloud-sdk/path.zsh.inc'
fi
if [ -f '/Users/jon.walstedt/bin/google-cloud-sdk/completion.zsh.inc' ]; then
  . '/Users/jon.walstedt/bin/google-cloud-sdk/completion.zsh.inc'
fi

# -----------------------------------------------------------------------------
# PNPM Setup
# -----------------------------------------------------------------------------
export PNPM_HOME="$HOME/Library/pnpm"
export PATH="$PNPM_HOME:$PATH"

# -----------------------------------------------------------------------------
# FZF Keybindings
# -----------------------------------------------------------------------------
bindkey '^v' fzf-file-widget
bindkey "^f" fzf-cd-widget

# -----------------------------------------------------------------------------
# Recompile Zsh Configuration for Faster Execution
# -----------------------------------------------------------------------------
if [[ ! ~/.zshrc.zwc -nt ~/.zshrc ]]; then
  zcompile ~/.zshrc
fi

# -----------------------------------------------------------------------------
# End Profiling and Display Results
# -----------------------------------------------------------------------------
# zprof
