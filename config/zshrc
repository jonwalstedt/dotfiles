ZSH_DISABLE_COMPFIX="true"
source $HOME/.profile

# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# ZSH_THEME="dracula"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
HYPHEN_INSENSITIVE="false"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="false"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
HIST_STAMPS="yyyy-mm-dd"
HIST_IGNORE_SPACE="true"

setopt auto_cd
setopt auto_list
setopt auto_menu
setopt auto_param_keys
setopt auto_param_slash
setopt auto_pushd
setopt complete_aliases
setopt correct
setopt equals
setopt extended_glob
setopt hist_ignore_all_dups
setopt hist_save_nodups
setopt hist_find_no_dups
setopt list_packed
setopt list_types
setopt mark_dirs
setopt magic_equal_subst
setopt no_flow_control
setopt no_hup
setopt noautoremoveslash
setopt nolistbeep
setopt prompt_subst
setopt auto_remove_slash
setopt share_history

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)

# zstyle :omz:plugins:ssh-agent agent-forwarding on
# zstyle :omz:plugins:ssh-agent identities id_rsa
# plugins=(extract git web-search gradle ssh-agent)
ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=#666666"
bindkey '^l' autosuggest-accept

plugins=(extract git web-search gradle z zsh-autosuggestions)

# User configuration
# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
  export EDITOR='vim'
else
  export EDITOR='nvim'
fi

# Terminal vim binding setup
set shell=bash\ -i
bindkey -v
bindkey '^P' up-history
bindkey '^N' down-history
bindkey '^?' backward-delete-char
bindkey '^h' backward-delete-char
bindkey '^w' backward-kill-word
bindkey '^r' history-incremental-search-backward
bindkey -M viins 'jj' vi-cmd-mode

function zle-keymap-select zle-line-init {
  # change cursor shape in iTerm2
  case $KEYMAP in
      vicmd)      print -n -- "\E]50;CursorShape=0\C-G";;  # block cursor
      viins|main) print -n -- "\E]50;CursorShape=1\C-G";;  # line cursor
  esac

  zle reset-prompt
  zle -R
}

function zle-line-finish {
  print -n -- "\E]50;CursorShape=0\C-G"  # block cursor
}

zle -N zle-line-init
zle -N zle-line-finish
zle -N zle-keymap-select
export KEYTIMEOUT=100

# setup fnm (alternative to nvm)
eval "$(fnm env)"

autoload -U add-zsh-hook

# place default node version under $HOME/.node-version
load-nvmrc() {
  DEFAULT_NODE_VERSION=`cat $HOME/.node-version`
  if [[ -f .nvmrc && -r .nvmrc ]]; then
    fnm use
  elif [[ `node -v` != $DEFAULT_NODE_VERSION ]]; then
    echo Reverting to node from "`node -v`" to "$DEFAULT_NODE_VERSION"
    fnm use $DEFAULT_NODE_VERSION
  fi
}

add-zsh-hook chpwd load-nvmrc
load-nvmrc

# FZF
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh


source $ZSH/oh-my-zsh.sh
source $HOME/.shell_env

bindkey '^v' fzf-file-widget
bindkey "รง" fzf-cd-widget

# Auto fetch in git projects
# chpwd () {
#   if [[ -z $VIMRUNTIME ]]; then
#     if git rev-parse --git-dir > /dev/null 2>&1; then
#       set -- "$(git rev-parse --show-toplevel)" 2>/dev/null
#       # If cd'ing into a git working copy and not within the same working copy
#         if [ -n "$1" ] && [ "$1" != "$vc_root" ]; then
#           vc_root="$1"
#           git fetch --all
#           git --no-pager log -n 20 --graph --pretty=format:'%Cgreen%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --all --date=relative
#         fi
#     fi
#   fi
# }
# chpwd

# uncomment to update oh_my_zsh on load
# upgrade_oh_my_zsh

# Change line prefix
# PS1="$ [%~] "
# PS1="%n@%m:%%# "
PROMPT='%{$fg[green]%}%~%{$fg_bold[blue]%}$(git_prompt_info)%{$reset_color%} '

ZSH_THEME_GIT_PROMPT_PREFIX="("
ZSH_THEME_GIT_PROMPT_SUFFIX=")"
ZSH_THEME_GIT_PROMPT_DIRTY=" +"
ZSH_THEME_GIT_PROMPT_CLEAN=""


# The next line updates PATH for the Google Cloud SDK.
if [ -f '~/google-cloud-sdk/path.zsh.inc' ]; then . '~/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '~/google-cloud-sdk/completion.zsh.inc' ]; then . '~/google-cloud-sdk/completion.zsh.inc'; fi

