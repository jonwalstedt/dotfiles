# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt
extends javascript

snippet cc "Functional React component in typescript"
import React from 'react';

export const ${1} = ():JSX.Element => {
  return (${0:${VISUAL}});
}
endsnippet

snippet cci "Functional React component in typescript - with interface"
interface ${1}Props {
  ${2}
}

const ${1} = ({${3}}: ${1}Props):JSX.Element => {
  return (${0:${VISUAL}});
}
endsnippet


snippet ccii "Functional React component in typescript - with interface"
import React from 'react';

interface `!v expand('%:t:r')`Props {
  ${1}
}

export const `!v expand('%:t:r')` = ({${2}}: `!v expand('%:t:r')`Props):JSX.Element => {
  return (${2});
}
endsnippet
