#!/usr/bin/env bash

# `.functions` provides helper functions for shell.
#
# This file is used as a part of `.shell_env`

git-dowloadfolder () {
  # Downloads folder from git repository.
  url="$1"
  svn checkout ${url/tree\/master/trunk}
}


transfer () {
  # Transfers text file as sharable link.
  # See https://transfer.sh/
  if [ $# -eq 0 ]; then echo "No arguments specified. Usage:\necho transfer /tmp/test.md\ncat /tmp/test.md | transfer test.md"; return 1; fi
tmpfile=$( mktemp -t transferXXX ); if tty -s; then basefile=$(basename "$1" | sed -e 's/[^a-zA-Z0-9._-]/-/g'); curl --progress-bar --upload-file "$1" "https://transfer.sh/$basefile" >> $tmpfile; else curl --progress-bar --upload-file "-" "https://transfer.sh/$1" >> $tmpfile ; fi; cat $tmpfile; rm -f $tmpfile;
}


mk () {
  # Create a new directory and enter it
  mkdir -p "$@" && cd "$@"
}


cdf () {
  # cd into whatever is the forefront Finder window.
  local path=$(osascript -e 'tell app "Finder" to POSIX path of (insertion location as alias)')
  echo "$path"
  cd "$path"
}

# fco - FZF fuzzy checkout git branch/tag (ctrl-g+g)
fco() {
  local tags branches target
  branches=$(
    git --no-pager branch --all \
      --format="%(if)%(HEAD)%(then)%(else)%(if:equals=HEAD)%(refname:strip=3)%(then)%(else)%1B[0;34;1mbranch%09%1B[m%(refname:short)%(end)%(end)" \
    | sed '/^$/d') || return
  tags=$(
    git --no-pager tag | awk '{print "\x1b[35;1mtag\x1b[m\t" $1}') || return
  target=$(
    (echo "$branches"; echo "$tags") |
    fzf --no-hscroll --no-multi -n 2 \
        --ansi) || return
  git checkout $(awk '{print $2}' <<<"$target" )
}

bindkey -s "^gp" "fco^J"

# git pull (ctrl-g+p)
function gitpull() {
  echo "git pull";
  git pull;
  zle reset-prompt;
  zle redisplay;
}

bindkey -s "^gg" "gitpull^J"
